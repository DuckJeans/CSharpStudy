24년 8월 10일

학습목표 : CSharp 언어로 첫 프로그래밍 작성하기. 변수에 대해 이해

주석 : 컴퓨터는 알아볼 수 없지만 사람만 알아볼 수 있게 표시하는 기능이다.
주석은 //
/* */
/* ~ */
로 표현된다.

파란색 : 키워드
노란색 : 함수
흰색 : 어떤 것(데이터 타입)의 이름

정수는 정수의 방식으로,
실수는 실수의 방식으로,
문자는 문자의 방식으로 표현한다.

Console.WrtieLine('Hello, World!") - Console.Write의 단축키는 cw Tab키 이며 이는 CMD 출력창에 컴퓨터에게 사람의 언어로 인식하게 하는 구조이다.
사람도 사람과 대화가 필요할때 그림, 바디 랭귀지, 수화등이 있지만 고차원적인 대화이기에 서로가 서로의 대화를 알아보기 위해서는 번역기가 필요하듯이
컴퓨터에게 사람의 언어를 읽을 수 있도록 도와주는 녀석이 있다.

--------------------------------------------

정수 방식 - int
실수 방식 - float
단어 방식 - char
문자열 방식 - string

--------------------------------------------

int number;
number = 10;
세미클론으로 해당 코드를 끝났다는 사실을 알려준다.
int는 정수의 방식이다.
number는 값의 형식이며 하나의 약속이다.
예를 들어 우리가 3+4를 7이라고 표기하듯이,
x+4=7 이라는 것이 x=3 라고 값을 정하듯이
마찬가지로 number도 그러하다.

이를 콘솔창에 띄우려면
Console.WriteLine(number);

그럼 콘솔창에선 10을 띄울것이다.
왜냐하면 우리가 정했던 number를 10으로 지정했기 때문이다.
만약 number라고 하는 하나의 문자를 50으로 지정했다면
콘솔에서도 50으로 표기가 될것이다.

int는 정수의 방식이기에 사칙연산이 가능하다.
int num1;
num1 = 5;

int num2;
num2 = 10;

라고 정한다면
Console.WriteLine(num1 + num2);
이런 식으로 콘솔창에 num1값과 num2값이 더한값을 보여줄것이다.
그렇다면 이를 사칙연산으로 나타낸다면

Console.WriteLine(num1 + num2);
Console.WriteLine(num1 - num2);
Console.WriteLine(num1 / num2);
Console.WriteLine(num1 * num2);
Console.WriteLine(num1 % num2);
이런식으로 나타낼 수 있다.
%는 나머지를 얘기한다.

--------------------------------------------

float는 실수의 방식이다.
이도 마찬가지로 실수안에 정수가 있듯이 실수도 사칙연산이 가능하다.
적는 표기는
float f1 = 1.5f;
float f2 = 2.9f;
으로 할 수 있고
콘솔창에서는 
Console.WriteLine(f1 + f2);
Console.WriteLine(f1 - f2);
Console.WriteLine(f1 / f2);
Console.WriteLine(f1 * f2);
Console.WriteLine(f1 % f2);
으로 표기가 된다.

--------------------------------------------

단어로 표기되는 char는 어떠할까.
char c1 = 'c';
로 표기가 된다.
이를 더하거나 뺄수 있을까?
놀랍게도 가능한 일이다.
c를 예를 들어 50이라고 한다면
50을 입력했을때 c로 출력이 되고
c를 입력했을때 50이 출력이 된다.
이것을 아스키(ASCII)코드라고 한다.
쉽게 말해
문자는 숫자인것이다.
이를 표기한다면
Console.WriteLine(c1);
이다.
콘솔창에서는 c로 표기가 된다.
만약
char c2 = 'd';

Console.WriteLine(c1 + c2);
라고 한다면 아까 말했듯이 문자는 숫자이기에
c를 50
d를 51이라고 예를 든다면
콘솔창에서는 이를 101이라고 쵸기를 할 것이다.

--------------------------------------------

string은 문자열 방식이다.
문자열과 문자열을 더하는 것은 될까?
당연하다.
'안녕'이라는 단어와 '반가워'라는 단어를 합친 다는 것은
간단하게 '안녕 반가워'로 표기가 될것이다.
하지만 단어와 단어를 빼는것과 나누는것, 곱하는 것은 될까?
문자열은 아니다.
문자열은 숫자가 아니기에 만약 코딩을 한다면
string s1 = "hello";
string s2 = "World!";

Console.WriteLine(s1);
Console.WriteLine(s2);
Console.WriteLine(s1 + s2);

이를 출력한다면
hello
World!
helloWorld!라고 출력이 될것이다.
char처럼 숫자가 나오는 일은 없지만 문자열이기에 빼거나 나누는 것은 불가능하다.

--------------------------------------------

Console.Clear();
이 코드는 콘솔창을 비워주는 기능이다.
너무 많은 값이 있거나
표기하는것이 보기가 힘들때 콘솔창을 지워준다.

--------------------------------------------

input을 알아보자
input은 콘솔창에 입력한 값을 의미하는데
이것과 함께 쓰는것이
Console.Write();
이다.
이 코딩은 콘솔창에서 사람이 입력한 값을 적는것을 것이다.
예를 들어 콘솔창에 사람이 10이라는 입력을 한다면
컴퓨터는 10을 이해하고 기억하는데
이를 이러한 코딩으로만 쓸것이 안되기에 한가지 코딩을 더한다면

Console.Write("이름을 입력해주세요 : ");
string inputName;
inputName = Console.ReadLine();
Console.WriteLine($"당신의 이름은 : {inputName}.");

이름은 문자열이다.
string은 문자열 방식이기에 string을 사용하였고,
그후 하나의 값을 stringName이라 칭하자.
그후 컴퓨터는 사람이 적었던 값을 inputName에서 읽을 것이다.
그렇게 사람이 적은 값을 읽은 컴퓨터는 그것을 저장하고 있다가 다음코딩에서
기억했던 값을 내뱉는다.
순서는 이러하다
1.컴퓨터가 사람에게 질문을 한다.
2.컴퓨터는 사람이 입력한 값을 기억한다.
3.만약 컴퓨터가 사람이 입력한 값을 inputName으로 기억하고 있다면
4.컴퓨터는 inputName이 사람이 적은 값으로 기억한다.
5.컴퓨터는 이를 기억하고 필요한 상황에서 기억했던 값을 보여주게 된다.
정말 쉽게 알려고 한다면
강아지를 훈련하는 것과 같다.

--------------------------------------------

응용을 해보자 여태껏 써왔던 것을 응용을 한다면 이러하게 할 것이다.

Console.WriteLine("float 값 3개를 입력 받아서 더하는 프로그램");

Console.Write("첫 번째 실수를 입력해주세요. : ");
string inputFloat;
inputFloat = Console.ReadLine();
float floatNumber1 = int.Parse(inputFloat);

Console.Write("두 번째 실수를 입력해주세요. : ");
string inputFloat2;
inputFloat2 = Console.ReadLine();
float floatNumber2 = int.Parse(inputFloat2);

Console.Write("세 번째 실수를 입력해주세요. : ");
string inputFloat3;
inputFloat3 = Console.ReadLine();
float floatNumber3 = int.Parse(inputFloat3);

Console.WriteLine("문자열의 덧셈 결과 : " + inputFloat + inputFloat2 + inputFloat3);
Console.WriteLine("정수의 덧셈 결과 : " + (floatNumber1 + floatNumber2 + floatNumber3));

이는 사람이 입력한 값 3개를 다 외우는 것이다.
그후 컴퓨터는 사람이 입력한 값 3개를 저장하고 사람이 마지막으로 낸 두 코딩에서 컴퓨터가 기억하고
 있던것을 내뱉는 것이다.
문제는
3개의 값을 입력한 후 컴퓨터가 더하는 프로그램
이를 문자열로 받아들인다면
첫번째 값을 : 2
두번째 값을 : 5
세번째 값을 : 7
문자열 : 257
정수 : 14
이렇게 나타낼 것이다.

다른 응용도 많을 것이다.

사각형의 넓이를 구하는 것도 가능할 것이고,
삼각형의 넓이나, 원의 둘레나 원의 넓이등 많은 것들을 입력한 값대로 출력해 낼것이다.

고차원으로 간다면 원기둥의 넓이, 구의 겉넓이등을 계산 할것이다.

--------------------------------------------

오늘은 C#의 기초와 스타트를 배워보았고, 여태 배웠던 것보다 어렵고 힘들었지만 계속하다보니
적응을 하는 것같은 느낌이 몸으로, 머리로 느끼고 있다.
블록코딩을 많이 했던 나는 코딩을 집적작성하는 일은 잦았다.
오늘이 나의 출발선이고, 씨앗이다.
미래의 나에게 포기하지말자는 말을 남기고 싶다.
내가 어른이 되어 직장을 갖고 배웠던것을 다시 훑어볼때 이 메모장을 다시 한 번 열어보았으면 좋겠다.
앞으로 더 많은 것을 배울것이지만 처음을 모르면 다음을 모르기에 지금을 열심히 배워볼것이다.
메모장에 배웠던것들과 느낀점을 지금부터 작성할 것이다.
앞으로도 그럴것이다. 누가 보지않아도 나를 위해 작성할것이기에, 나를 자랑스럽게 만들것이다.
-2024년 8월 10일 오후 6시 32분 마지막 작성-